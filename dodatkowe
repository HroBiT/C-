using System;

public class Node
{
    public int Value;
    public Node Left;
    public Node Right;

    public Node(int value)
    {
        Value = value;
        Left = null;
        Right = null;
    }
}

public class Tree
{
    private Node root;

    public Tree()
    {
        root = null;
    }

    public void Add(int value)
    {
        root = AddRecursively(root, value);
    }

    private Node AddRecursively(Node current, int value)
    {
        if (current == null)
        {
            return new Node(value);
        }

        if (value % 2 == 0)
        {
            current.Left = AddRecursively(current.Left, value);
        }
        else
        {
            current.Right = AddRecursively(current.Right, value);
        }

        return current;
    }

    public bool Contains(int value)
    {
        return ContainsRecursively(root, value);
    }

    private bool ContainsRecursively(Node current, int value)
    {
        if (current == null)
        {
            return false;
        }

        if (current.Value == value)
        {
            return true;
        }

        if (value < current.Value)
        {
            return ContainsRecursively(current.Left, value);
        }
        else
        {
            return ContainsRecursively(current.Right, value);
        }
    }

    public void Print()
    {
        PrintRecursively(root);
    }

    private void PrintRecursively(Node current)
    {
        if (current != null)
        {
            PrintRecursively(current.Left);
            Console.WriteLine(current.Value);
            PrintRecursively(current.Right);
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        Tree tree = new Tree();
        tree.Add(5);
        tree.Add(8);
        tree.Add(2);
        tree.Add(9);
        tree.Add(6);
        tree.Add(1);

        Console.WriteLine("Whole Tree:");
        tree.Print();

        int searchValue = 6;
        if (tree.Contains(searchValue))
        {
            Console.WriteLine($"Tree contains {searchValue}.");
        }
        else
        {
            Console.WriteLine($"Tree does not contain {searchValue}.");
        }
    }
}
